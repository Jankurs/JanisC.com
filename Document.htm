<!DOCTYPE HTML>
<!-- saved from url=(0040)http://127.0.0.1:5500/9.klase/index.html -->
<!DOCTYPE html PUBLIC "" ""><HTML lang="en"><HEAD><META content="IE=11.0000" 
http-equiv="X-UA-Compatible">
     
<META charset="UTF-8">     
<META http-equiv="X-UA-Compatible" content="IE=edge">     
<META name="viewport" content="width=device-width, initial-scale=1.0">     
<TITLE>Document</TITLE>     
<STYLE>
        body{
            font-size: 2.5em;
            background-color: aquamarine(233, 235,238);
            margin-top: 0;

        }
        h1{
            margin-top: 0;
            padding: 30px;
            text-align: center;
            background-color: rgb(175, 199, 235);
        }
    </STYLE>
 
<META name="GENERATOR" content="MSHTML 11.00.10570.1001"></HEAD> 
<BODY>
<H1>Iekšējas kārtības noteikumi datorkabinetā</H1>
<OL>
  <LI>Kabinetā drīkst ienakt tikai pēc skolotaja uzaicinajuma.</LI>
  <LI>Somas janoliek skolotāja norādītajā vietā.</LI>
  <LI>Rokām jābūt tīrām un sausāk.</LI>
  <LI>Datorkrēsli jālieto suadzīgi, tikai sēdēšanai.</LI>
  <LI>Kabinetā nedrīkst ēst un dzert.</LI>
  <LI>Nedrīkst bojāt klases aprīkojumu.</LI>
  <LI>Aizliegts izdzēst datorā uzstādīto programmatūru.</LI>
  <LI>Ja kāda ierīce aizdomīgi karst, tā nekavējoties jāizslēdz.</LI>
  <LI>Darbu beidzot sakārtot savu darba vietu.</LI>
  <LI>Atļauts lietot datoru un internetu tikai mācību vajadzībām.</LI>
  <LI>Stundas laikā nedrīkst traucēt klasesbiedriem</LI><!-- Code injected by live-server --> 
<SCRIPT>
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</SCRIPT>
   </OL></BODY></HTML>
